{"version":3,"file":"static/js/505.66a01df8.chunk.js","mappings":"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","sources":["components/CryptoCard.tsx","pages/Currency.tsx"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport millify from \"millify\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Coin } from \"../app/react-ts-env\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\ntype HandlePageClickType = {\r\n  selected: number;\r\n};\r\n\r\nconst CryptoCard = ({coins}:any) => {\r\n\r\n   const [itemOffset, setItemOffset] = useState(0);\r\n   const itemsPerPage = 10;\r\n   const endOffset = itemOffset + itemsPerPage;\r\n   const currentItems = coins && coins.slice(itemOffset, endOffset);\r\n   const pageCount = coins ? Math.ceil(coins.length / itemsPerPage) : 1;\r\n\r\n   const handlePageClick = (event: HandlePageClickType) => {\r\n     const newOffset = (event.selected * itemsPerPage) % coins.length;\r\n     setItemOffset(newOffset);\r\n   };\r\n  return (\r\n    <div className=\"p-3\">\r\n      <div className=\"row\">\r\n        {coins &&\r\n          currentItems.map((el: Coin) => (\r\n            <div\r\n              className=\"col-md-6 col-sm-6 col-lg-4 mb-4\"\r\n              key={el.uuid}\r\n            >\r\n              <Card style={{minWidth:\"10rem\"}}>\r\n                <Card.Body>\r\n                  <NavLink\r\n                    to={`/crypto/${el.uuid}`}\r\n                    className=\"text-decoration-none text-dark\"\r\n                  >\r\n                    <span className=\"d-flex border-bottom justify-content-between align-items-center p-2\">\r\n                      <Card.Title>{el.name}</Card.Title>\r\n                      <img\r\n                        src={el.iconUrl}\r\n                        alt={el.name}\r\n                        width={40}\r\n                        height={40}\r\n                      />\r\n                    </span>\r\n                    <Card.Text className=\"border-bottom\">\r\n                      <div className=\"d-flex justify-content-between m-3\">\r\n                        <span className=\"fw-semibold fs-5\">Price:</span>\r\n                        <span>{millify(parseFloat(el.price))}</span>\r\n                      </div>\r\n                      <div className=\"m-3 d-flex justify-content-between\">\r\n                        <span className=\"fw-semibold fs-5\">Market Cap:</span>\r\n                        <span>{millify(parseFloat(el.marketCap))}</span>\r\n                      </div>\r\n                      <div className=\"m-3 d-flex justify-content-between\">\r\n                        <span className=\"fw-semibold fs-5\">Daily Change:</span>\r\n                        <span>{millify(parseFloat(el.change))}</span>\r\n                      </div>\r\n                    </Card.Text>\r\n                  </NavLink>\r\n                </Card.Body>\r\n                <div className=\"d-flex justify-content-around mb-3\">\r\n                  <Link\r\n                    className=\"text-decoration-none opacity-75 Card_Link fs-6\"\r\n                    to={`/market/${el.uuid}`}\r\n                  >\r\n                    View Markets\r\n                  </Link>\r\n                  <Link\r\n                    className=\"text-decoration-none opacity-75 Card_Link fs-6\"\r\n                    to={`/exchange/${el.uuid}`}\r\n                  >\r\n                    View Exchanges\r\n                  </Link>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <ReactPaginate\r\n        breakLabel=\"...\"\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={pageCount}\r\n        previousLabel=\"< previous\"\r\n        renderOnZeroPageCount={null}\r\n        containerClassName=\"pagination\"\r\n        pageClassName=\"page-num\"\r\n        previousLinkClassName=\"page-num\"\r\n        nextLinkClassName=\"page-num\"\r\n        activeLinkClassName=\"active\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoCard;\r\n","import React, { useContext } from \"react\";\r\nimport CryptoCard from \"../components/CryptoCard\";\r\nimport { userContext } from \"../context/ContextProvider\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\n\r\nconst Currency = () => {\r\n  const { sortedData } = useContext(userContext);\r\n\r\n  return (\r\n      <div>{sortedData ? <CryptoCard coins={sortedData} /> : <Spinner />}</div>\r\n  );\r\n};\r\n\r\nexport default Currency;\r\n"],"names":["_ref","coins","_useState","useState","_useState2","_slicedToArray","itemOffset","setItemOffset","endOffset","currentItems","slice","pageCount","Math","ceil","length","_jsxs","className","children","_jsx","map","el","Card","style","minWidth","Body","NavLink","to","concat","uuid","Title","name","src","iconUrl","alt","width","height","Text","millify","parseFloat","price","marketCap","change","Link","ReactPaginate","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","pageClassName","previousLinkClassName","nextLinkClassName","activeLinkClassName","sortedData","useContext","userContext","CryptoCard","Spinner"],"sourceRoot":""}