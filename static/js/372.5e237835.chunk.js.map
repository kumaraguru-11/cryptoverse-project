{"version":3,"file":"static/js/372.5e237835.chunk.js","mappings":"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","sources":["layouts/AsyncWrapper.tsx","pages/CryptoExchange.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\n// Define the AsyncWrapperProps type\r\ntype AsyncWrapperProps = {\r\n  loading: boolean;\r\n  fulfilled: boolean;\r\n  error: any; // You can replace 'any' with the appropriate error type if needed\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction AsyncWrapper(props: AsyncWrapperProps) {\r\n  if (props.loading) {\r\n    return <Spinner/>\r\n  } else if (props.error) {\r\n    return props.error;\r\n  } else if (props.fulfilled) {\r\n    return props.children;\r\n  } else {\r\n    return <>Something has happened</>;\r\n  }\r\n}\r\n\r\n// You likely intended to set default values instead of defaultValue\r\nAsyncWrapper.defaultProps = {\r\n  loading: true,\r\n  fulfilled: false,\r\n  error: null,\r\n  children: <></>,\r\n};\r\n\r\nexport default AsyncWrapper;\r\n\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetCoinExchangesQuery } from \"../redux/feature/coin.feature\";\r\nimport AsyncWrapper from \"../layouts/AsyncWrapper\";\r\nimport millify from \"millify\";\r\nimport DataTable, { TableColumn } from \"react-data-table-component\";\r\nimport { ExchangeDataRow } from \"../app/react-ts-env\";\r\n\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: \"72px\",\r\n      fontSize: \"15px\",\r\n      justifyContent: \"right\",\r\n      alignSelf:\"right\"\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingRight: \"8px\",\r\n      fontSize: \"15px\",\r\n      justifyContent: \"left\",\r\n    },\r\n  },\r\n};\r\n\r\nconst CryptoExchange = () => {\r\n  const params = useParams();\r\n\r\n  const { isLoading, error, data } = useGetCoinExchangesQuery({\r\n    coinId: params?.coinId,\r\n  });\r\n  const columns: TableColumn<ExchangeDataRow>[] = [\r\n    {\r\n      name: \"Rank\",\r\n      selector: (row) => row.rank,\r\n    },\r\n    {\r\n      name: \"Avatar\",\r\n      cell: (row) => (\r\n        <img src={row.iconUrl} alt={row.name} width={30} height={30} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: (row) => row.name,\r\n    },\r\n    {\r\n      name: \"Number of Markets\",\r\n      selector: (row) => row.numberOfMarkets,\r\n    },\r\n    {\r\n      name: \"BTC Price\",\r\n      cell: (row) => millify(parseFloat(row.btcPrice)),\r\n    },\r\n    {\r\n      name: \"Recommended\",\r\n      cell: (row) =>\r\n        row.recommended === true ? (\r\n          <i className=\"bi bi-check-lg\" style={{ color: \"green\" }}></i>\r\n        ) : (\r\n          <i className=\"bi bi-slash-circle\" style={{ color: \"red\" }}></i>\r\n        ),\r\n    },\r\n    {\r\n      name: \"Price\",\r\n      cell: (row) => millify(parseFloat(row.price)),\r\n    },\r\n    {\r\n      name: \"verify\",\r\n      cell: (row) =>\r\n        row.verified === true ? (\r\n          <i className=\"bi bi-slash-circle fs-3\" style={{ color: \"green\" }}></i>\r\n        ) : (\r\n          <i className=\"bi bi-slash-circle fs-3\" style={{ color: \"red\" }}></i>\r\n        ),\r\n    },\r\n    {\r\n      name: \"Coin Ranking Url\",\r\n      cell: (row) => (\r\n        <a href={row.coinrankingUrl} target=\"_blank\" rel=\"noreferrer\" className=\"fs-3 text-dark\">\r\n          <i className=\"bi bi-link-45deg\"></i>\r\n        </a>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <AsyncWrapper fulfilled={Boolean(data)} error={error} loading={isLoading}>\r\n      <div className=\"p-4 mb-5\">\r\n        {Boolean(data) && (\r\n          <>\r\n            {\" \"}\r\n            <h3 className=\"fw-normal mt-3\">Exchange Crypto Stats</h3>\r\n            <div className=\"d-flex p-4 fs-4\">\r\n              <div className=\"d-flex flex-column mx-5\">\r\n                <span className=\"fs-6 opacity-75\">24h Volume</span>\r\n                <span>\r\n                  <i className=\"bi bi-lightning\"></i>\r\n                  {millify(\r\n                    Number(parseFloat(data.data.stats[\"24hVolume\"])) || 0\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex flex-column mx-5\">\r\n                <span className=\"fs-6 opacity-75\">Total</span>\r\n                <span>\r\n                  <i className=\"bi bi-hand-thumbs-up\"></i>\r\n                  {millify(parseFloat(data.data.stats.total))}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <DataTable\r\n          columns={columns}\r\n          data={data?.data?.exchanges || []}\r\n          pagination\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n        />\r\n      </div>\r\n    </AsyncWrapper>\r\n  );\r\n};\r\n\r\nexport default CryptoExchange;\r\n"],"names":["AsyncWrapper","props","loading","_jsx","Spinner","error","fulfilled","children","_Fragment","defaultProps","customStyles","rows","style","minHeight","fontSize","justifyContent","alignSelf","headCells","paddingRight","_data$data","params","useParams","_useGetCoinExchangesQ","useGetCoinExchangesQuery","coinId","isLoading","data","columns","name","selector","row","rank","cell","src","iconUrl","alt","width","height","numberOfMarkets","millify","parseFloat","btcPrice","recommended","className","color","price","verified","href","coinrankingUrl","target","rel","Boolean","_jsxs","Number","stats","total","DataTable","exchanges","pagination","highlightOnHover"],"sourceRoot":""}