{"version":3,"file":"static/js/293.b6c1be8b.chunk.js","mappings":"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","sources":["components/CryptoCard.tsx","constant/crypto.tsx","layouts/AsyncWrapper.tsx","pages/Home.tsx"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport millify from \"millify\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Coin } from \"../app/react-ts-env\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\ntype HandlePageClickType = {\r\n  selected: number;\r\n};\r\n\r\nconst CryptoCard = ({coins}:any) => {\r\n\r\n   const [itemOffset, setItemOffset] = useState(0);\r\n   const itemsPerPage = 10;\r\n   const endOffset = itemOffset + itemsPerPage;\r\n   const currentItems = coins && coins.slice(itemOffset, endOffset);\r\n   const pageCount = coins ? Math.ceil(coins.length / itemsPerPage) : 1;\r\n\r\n   const handlePageClick = (event: HandlePageClickType) => {\r\n     const newOffset = (event.selected * itemsPerPage) % coins.length;\r\n     setItemOffset(newOffset);\r\n   };\r\n  return (\r\n    <div className=\"p-3\">\r\n      <div className=\"row\">\r\n        {coins &&\r\n          currentItems.map((el: Coin) => (\r\n            <div\r\n              className=\"col-md-6 col-sm-6 col-lg-4 mb-4\"\r\n              key={el.uuid}\r\n            >\r\n              <Card style={{minWidth:\"10rem\"}}>\r\n                <Card.Body>\r\n                  <NavLink\r\n                    to={`/crypto/${el.uuid}`}\r\n                    className=\"text-decoration-none text-dark\"\r\n                  >\r\n                    <span className=\"d-flex border-bottom justify-content-between align-items-center p-2\">\r\n                      <Card.Title>{el.name}</Card.Title>\r\n                      <img\r\n                        src={el.iconUrl}\r\n                        alt={el.name}\r\n                        width={40}\r\n                        height={40}\r\n                      />\r\n                    </span>\r\n                    <Card.Text className=\"border-bottom\">\r\n                      <div className=\"d-flex justify-content-between m-3\">\r\n                        <span className=\"fw-semibold fs-5\">Price:</span>\r\n                        <span>{millify(parseFloat(el.price))}</span>\r\n                      </div>\r\n                      <div className=\"m-3 d-flex justify-content-between\">\r\n                        <span className=\"fw-semibold fs-5\">Market Cap:</span>\r\n                        <span>{millify(parseFloat(el.marketCap))}</span>\r\n                      </div>\r\n                      <div className=\"m-3 d-flex justify-content-between\">\r\n                        <span className=\"fw-semibold fs-5\">Daily Change:</span>\r\n                        <span>{millify(parseFloat(el.change))}</span>\r\n                      </div>\r\n                    </Card.Text>\r\n                  </NavLink>\r\n                </Card.Body>\r\n                <div className=\"d-flex justify-content-around mb-3\">\r\n                  <Link\r\n                    className=\"text-decoration-none opacity-75 Card_Link fs-6\"\r\n                    to={`/market/${el.uuid}`}\r\n                  >\r\n                    View Markets\r\n                  </Link>\r\n                  <Link\r\n                    className=\"text-decoration-none opacity-75 Card_Link fs-6\"\r\n                    to={`/exchange/${el.uuid}`}\r\n                  >\r\n                    View Exchanges\r\n                  </Link>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <ReactPaginate\r\n        breakLabel=\"...\"\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={pageCount}\r\n        previousLabel=\"< previous\"\r\n        renderOnZeroPageCount={null}\r\n        containerClassName=\"pagination\"\r\n        pageClassName=\"page-num\"\r\n        previousLinkClassName=\"page-num\"\r\n        nextLinkClassName=\"page-num\"\r\n        activeLinkClassName=\"active\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoCard;\r\n","import { Coin, Stats } from \"../app/react-ts-env\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css'\r\nimport millify from \"millify\";\r\n\r\n\r\nconst TIME_PERIOD = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\nconst genericStats = (coin: Coin) => {\r\n  return [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: coin.numberOfMarkets,\r\n      icon: \"bi bi-graph-up\",\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: coin.numberOfExchanges,\r\n      icon: \"bi bi-currency-yen\",\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: coin.supply.confirmed ? <i className=\"bi bi-check-lg\"/> : <i className=\"bi bi-slash-circle\"/>,\r\n      icon: \"bi bi-exclamation-circle\",\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(parseFloat(coin.supply.total))}`,\r\n      icon: \"bi bi-exclamation-circle\",\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(parseFloat(coin.supply.max))}`,\r\n      icon: \"bi bi-exclamation-circle\",\r\n    },\r\n  ];\r\n};\r\n\r\n\r\nconst coinState = (coin: Coin) => {\r\n  return [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${coin.price && millify(parseFloat(coin.price))}`,\r\n      icon: \"bi bi-currency-dollar\",\r\n    },\r\n    { title: \"Rank\", value: coin.rank, icon: \"bi bi-hash\" },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${coin[\"24hVolume\"] && millify(parseFloat(coin[\"24hVolume\"]))}`,\r\n      icon: \"bi bi-lightning\",\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${coin.marketCap && millify(parseFloat(coin.marketCap))}`,\r\n      icon: \"bi bi-currency-dollar\",\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(parseFloat(coin.allTimeHigh.price))}`,\r\n      icon: \"bi bi-currency-dollar\",\r\n    },\r\n  ];\r\n};\r\n\r\n\r\nconst stats=(stats:Stats)=>{\r\n  return [\r\n    {\r\n      title: \"Total Cryptocurriencies\",\r\n      value: `${stats.totalCoins && millify(parseFloat(stats.totalCoins))}`,\r\n      icon: <i className=\"bi bi-exclamation-circle\"/>,\r\n    },\r\n    {\r\n      title: \"Total Exchanges\",\r\n      value: `${\r\n        stats.totalExchanges && millify(parseFloat(stats.totalExchanges))\r\n      }`,\r\n      icon: <i className=\"bi bi-currency-yen\"/>,\r\n    },\r\n    {\r\n      title: \"Total Market Cap\",\r\n      value: `${\r\n        stats.totalMarketCap && millify(parseFloat(stats.totalMarketCap))\r\n      }`,\r\n      icon: <i className=\"bi bi-currency-dollar\"/>,\r\n    },\r\n    {\r\n      title: \"Total 24 Volume\",\r\n      value: `${\r\n        stats[\"total24hVolume\"] && millify(parseFloat(stats[\"total24hVolume\"]))\r\n      }`,\r\n      icon: <i className=\"bi bi-lightning\"/>,\r\n    },\r\n    {\r\n      title: \"Total Market\",\r\n      value: `${\r\n        stats.totalMarkets && millify(parseFloat(stats.totalMarkets))\r\n      }`,\r\n      icon: <i className=\"bi bi-currency-dollar\"/>,\r\n    },\r\n  ];\r\n}\r\n\r\nexport { coinState, genericStats ,TIME_PERIOD,stats};\r\n","import React from \"react\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\n// Define the AsyncWrapperProps type\r\ntype AsyncWrapperProps = {\r\n  loading: boolean;\r\n  fulfilled: boolean;\r\n  error: any; // You can replace 'any' with the appropriate error type if needed\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction AsyncWrapper(props: AsyncWrapperProps) {\r\n  if (props.loading) {\r\n    return <Spinner/>\r\n  } else if (props.error) {\r\n    return props.error;\r\n  } else if (props.fulfilled) {\r\n    return props.children;\r\n  } else {\r\n    return <>Something has happened</>;\r\n  }\r\n}\r\n\r\n// You likely intended to set default values instead of defaultValue\r\nAsyncWrapper.defaultProps = {\r\n  loading: true,\r\n  fulfilled: false,\r\n  error: null,\r\n  children: <></>,\r\n};\r\n\r\nexport default AsyncWrapper;\r\n\r\n","import React from \"react\";\r\nimport { useGetCoinsQuery } from \"../redux/feature/coin.feature\";\r\nimport { useGetFeedsQuery } from \"../redux/feature/news.feature\";\r\nimport AsyncWrapper from \"../layouts/AsyncWrapper\";\r\nimport { stats } from \"../constant/crypto\";\r\nimport CryptoCard from \"../components/CryptoCard\";\r\nimport NewsList from \"../components/NewsList\";\r\n\r\nconst Home = () => {\r\n  const { data, isLoading, error } = useGetCoinsQuery({limit:10});\r\n  const {\r\n    data: feeds,\r\n    error: feedserror,\r\n    isLoading: feedsLoading,\r\n  } = useGetFeedsQuery({\r\n    query: \"Cryptocurrencies\",\r\n    count: 6,\r\n  });\r\n  return (\r\n    <AsyncWrapper\r\n      fulfilled={Boolean(data && feeds)}\r\n      error={error || feedserror}\r\n      loading={isLoading || feedsLoading}\r\n    >\r\n      {Boolean(data && feeds) && (\r\n        <>\r\n          <div className=\"p-4 my-3\">\r\n            <h4 className=\"fw-normal\">Global Crypto Stats</h4>\r\n            <div className=\"p-3\">\r\n              <div className=\"row\">\r\n                {stats(data.data.stats).map((st) => (\r\n                  <div className=\"col-md-6 col-sm-6 col-lg-4 my-3\" key={st.title}>\r\n                    <div className=\"opacity-75\">{st.title}</div>\r\n                    <div className=\"fs-4\">\r\n                      {st.icon}\r\n                      {st.value}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <h3 className=\"fw-normal mt-5\">\r\n                Top 10 Crypto Currencies in the World\r\n              </h3>\r\n              <div className=\"mt-3\">\r\n                <CryptoCard coins={data.data.coins} />\r\n              </div>\r\n              {/* <h3 className=\"fw-normal mt-3\"> Latest Cryptocurrencies News</h3>\r\n              <div className=\"my-3\"><NewsList feeds={feeds.value}/></div> */}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </AsyncWrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_ref","coins","_useState","useState","_useState2","_slicedToArray","itemOffset","setItemOffset","endOffset","currentItems","slice","pageCount","Math","ceil","length","_jsxs","className","children","_jsx","map","el","Card","style","minWidth","Body","NavLink","to","concat","uuid","Title","name","src","iconUrl","alt","width","height","Text","millify","parseFloat","price","marketCap","change","Link","ReactPaginate","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","pageClassName","previousLinkClassName","nextLinkClassName","activeLinkClassName","TIME_PERIOD","genericStats","coin","title","value","numberOfMarkets","icon","numberOfExchanges","supply","confirmed","total","max","coinState","rank","allTimeHigh","stats","totalCoins","totalExchanges","totalMarketCap","totalMarkets","AsyncWrapper","props","loading","Spinner","error","fulfilled","_Fragment","defaultProps","_useGetCoinsQuery","useGetCoinsQuery","limit","data","isLoading","_useGetFeedsQuery","useGetFeedsQuery","query","count","feeds","feedserror","feedsLoading","Boolean","st","CryptoCard"],"sourceRoot":""}