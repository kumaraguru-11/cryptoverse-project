{"version":3,"file":"static/js/849.c5d32b67.chunk.js","mappings":"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","sources":["layouts/AsyncWrapper.tsx","pages/CryptoMarket.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\n// Define the AsyncWrapperProps type\r\ntype AsyncWrapperProps = {\r\n  loading: boolean;\r\n  fulfilled: boolean;\r\n  error: any; // You can replace 'any' with the appropriate error type if needed\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction AsyncWrapper(props: AsyncWrapperProps) {\r\n  if (props.loading) {\r\n    return <Spinner />;\r\n  } else if (props.error) {\r\n    // console.error(\"An error occurred:\", props.error);\r\n    return props.error ;\r\n    //  if (props.error.status === 404) {\r\n    //    return (\r\n    //      <div>\r\n    //        <h2>Resource Not Found</h2>\r\n    //        <p>The requested resource could not be found.</p>\r\n    //      </div>\r\n    //    );\r\n    //  }\r\n\r\n    //  // Handle other types of errors\r\n    //  return (\r\n    //    <div>\r\n    //      <h2>Something went wrong...</h2>\r\n    //      <p>{props.error.message || \"Unknown error\"}</p>\r\n    //    </div>\r\n    //  );\r\n  } else if (props.fulfilled) {\r\n    return props.children;\r\n  } else {\r\n    return <>Something has happened</>;\r\n  }\r\n}\r\n\r\n// You likely intended to set default values instead of defaultValue\r\nAsyncWrapper.defaultProps = {\r\n  loading: true,\r\n  fulfilled: false,\r\n  error: null,\r\n  children: <></>,\r\n};\r\n\r\nexport default AsyncWrapper;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetCoinMarketsQuery } from \"../redux/feature/coin.feature\";\r\nimport AsyncWrapper from \"../layouts/AsyncWrapper\";\r\nimport { MarketDataRow } from \"../app/react-ts-env\";\r\nimport millify from \"millify\";\r\nimport DataTable, { TableColumn } from \"react-data-table-component\";\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: \"72px\", // override the row height\r\n      fontSize:\"15px\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: \"8px\", // override the cell padding for head cells\r\n      paddingRight: \"8px\",\r\n      fontSize: \"15px\",\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: \"8px\", // override the cell padding for data cells\r\n      paddingRight: \"8px\",\r\n    },\r\n  },\r\n};\r\n\r\nconst CryptoMarket = () => {\r\n  const params = useParams();\r\n\r\n  const { isLoading, error, data } = useGetCoinMarketsQuery({\r\n    coinId: params?.coinId,\r\n  });\r\n  const columns: TableColumn<MarketDataRow>[] = [\r\n    {\r\n      name: \"Rank\",\r\n      selector: (row) => row.rank,\r\n    },\r\n    {\r\n      name: \"Avatar\",\r\n      cell: (row) => (\r\n        <img\r\n          src={row.exchange.iconUrl}\r\n          alt={row.exchange.name}\r\n          width={30}\r\n          height={30}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: (row) => row.exchange.name,\r\n    },\r\n    {\r\n      name: \"Market Share\",\r\n      selector: (row) => row.marketShare,\r\n    },\r\n    {\r\n      name: \"BTC Price\",\r\n      cell: (row) => millify(parseFloat(row.btcPrice)),\r\n    },\r\n    {\r\n      name: \"Recommended\",\r\n      cell: (row) =>\r\n        row.recommended === true ? (\r\n          <i className=\"bi bi-check-lg\" style={{ color: \"green\" }}></i>\r\n        ) : (\r\n          <i className=\"bi bi-slash-circle\" style={{ color: \"red\" }}></i>\r\n        ),\r\n    },\r\n    {\r\n      name: \"Price\",\r\n      cell: (row) => millify(parseFloat(row.price)),\r\n    },\r\n    {\r\n      name: \"24h Volume\",\r\n      cell: (row) => millify(parseFloat(row[\"24hVolume\"])),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <AsyncWrapper fulfilled={Boolean(data)} error={error} loading={isLoading}>\r\n      <div className=\"p-4 mb-5\">\r\n        {data &&  (\r\n          <>\r\n            {\" \"}\r\n            <h3 className=\"fw-normal mt-3\">Market Crypto Stats</h3>\r\n            <div className=\"d-flex p-4 fs-4\">\r\n              <div className=\"d-flex flex-column mx-5\">\r\n                <span className=\"fs-6 opacity-75\">24h Volume</span>\r\n                <span>\r\n                  <i className=\"bi bi-lightning\"></i>\r\n                  {millify(\r\n                    Number(parseFloat(data.data.stats[\"24hVolume\"])) || 0\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex flex-column mx-5\">\r\n                <span className=\"fs-6 opacity-75\">Total</span>\r\n                <span>\r\n                  <i className=\"bi bi-hand-thumbs-up\"></i>\r\n                  {millify(parseFloat(data.data.stats.total))}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <DataTable\r\n          columns={columns}\r\n          data={data?.data?.markets || []}\r\n          pagination\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n        />\r\n      </div>\r\n    </AsyncWrapper>\r\n  );\r\n};\r\n\r\nexport default CryptoMarket;\r\n"],"names":["AsyncWrapper","props","loading","_jsx","Spinner","error","fulfilled","children","_Fragment","defaultProps","customStyles","rows","style","minHeight","fontSize","headCells","paddingLeft","paddingRight","cells","_data$data","params","useParams","_useGetCoinMarketsQue","useGetCoinMarketsQuery","coinId","isLoading","data","columns","name","selector","row","rank","cell","src","exchange","iconUrl","alt","width","height","marketShare","millify","parseFloat","btcPrice","recommended","className","color","price","Boolean","_jsxs","Number","stats","total","DataTable","markets","pagination","highlightOnHover"],"sourceRoot":""}