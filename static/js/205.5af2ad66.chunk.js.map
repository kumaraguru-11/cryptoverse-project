{"version":3,"file":"static/js/205.5af2ad66.chunk.js","mappings":"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","sources":["constant/crypto.tsx","layouts/AsyncWrapper.tsx","components/chart.tsx","pages/CoinDetails.tsx"],"sourcesContent":["import { Coin, Stats } from \"../app/react-ts-env\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css'\r\nimport millify from \"millify\";\r\n\r\n\r\nconst TIME_PERIOD = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\nconst genericStats = (coin: Coin) => {\r\n  return [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: coin.numberOfMarkets,\r\n      icon: \"bi bi-graph-up\",\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: coin.numberOfExchanges,\r\n      icon: \"bi bi-currency-yen\",\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: coin.supply.confirmed ? <i className=\"bi bi-check-lg\"/> : <i className=\"bi bi-slash-circle\"/>,\r\n      icon: \"bi bi-exclamation-circle\",\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(parseFloat(coin.supply.total))}`,\r\n      icon: \"bi bi-exclamation-circle\",\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(parseFloat(coin.supply.max))}`,\r\n      icon: \"bi bi-exclamation-circle\",\r\n    },\r\n  ];\r\n};\r\n\r\n\r\nconst coinState = (coin: Coin) => {\r\n  return [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${coin.price && millify(parseFloat(coin.price))}`,\r\n      icon: \"bi bi-currency-dollar\",\r\n    },\r\n    { title: \"Rank\", value: coin.rank, icon: \"bi bi-hash\" },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${coin[\"24hVolume\"] && millify(parseFloat(coin[\"24hVolume\"]))}`,\r\n      icon: \"bi bi-lightning\",\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${coin.marketCap && millify(parseFloat(coin.marketCap))}`,\r\n      icon: \"bi bi-currency-dollar\",\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(parseFloat(coin.allTimeHigh.price))}`,\r\n      icon: \"bi bi-currency-dollar\",\r\n    },\r\n  ];\r\n};\r\n\r\n\r\nconst stats=(stats:Stats)=>{\r\n  return [\r\n    {\r\n      title: \"Total Cryptocurriencies\",\r\n      value: `${stats.totalCoins && millify(parseFloat(stats.totalCoins))}`,\r\n      icon: <i className=\"bi bi-exclamation-circle\"/>,\r\n    },\r\n    {\r\n      title: \"Total Exchanges\",\r\n      value: `${\r\n        stats.totalExchanges && millify(parseFloat(stats.totalExchanges))\r\n      }`,\r\n      icon: <i className=\"bi bi-currency-yen\"/>,\r\n    },\r\n    {\r\n      title: \"Total Market Cap\",\r\n      value: `${\r\n        stats.totalMarketCap && millify(parseFloat(stats.totalMarketCap))\r\n      }`,\r\n      icon: <i className=\"bi bi-currency-dollar\"/>,\r\n    },\r\n    {\r\n      title: \"Total 24 Volume\",\r\n      value: `${\r\n        stats[\"total24hVolume\"] && millify(parseFloat(stats[\"total24hVolume\"]))\r\n      }`,\r\n      icon: <i className=\"bi bi-lightning\"/>,\r\n    },\r\n    {\r\n      title: \"Total Market\",\r\n      value: `${\r\n        stats.totalMarkets && millify(parseFloat(stats.totalMarkets))\r\n      }`,\r\n      icon: <i className=\"bi bi-currency-dollar\"/>,\r\n    },\r\n  ];\r\n}\r\n\r\nexport { coinState, genericStats ,TIME_PERIOD,stats};\r\n","import React from \"react\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\n// Define the AsyncWrapperProps type\r\ntype AsyncWrapperProps = {\r\n  loading: boolean;\r\n  fulfilled: boolean;\r\n  error: any; // You can replace 'any' with the appropriate error type if needed\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction AsyncWrapper(props: AsyncWrapperProps) {\r\n  if (props.loading) {\r\n    return <Spinner />;\r\n  } else if (props.error) {\r\n    // console.error(\"An error occurred:\", props.error);\r\n    return props.error ;\r\n    //  if (props.error.status === 404) {\r\n    //    return (\r\n    //      <div>\r\n    //        <h2>Resource Not Found</h2>\r\n    //        <p>The requested resource could not be found.</p>\r\n    //      </div>\r\n    //    );\r\n    //  }\r\n\r\n    //  // Handle other types of errors\r\n    //  return (\r\n    //    <div>\r\n    //      <h2>Something went wrong...</h2>\r\n    //      <p>{props.error.message || \"Unknown error\"}</p>\r\n    //    </div>\r\n    //  );\r\n  } else if (props.fulfilled) {\r\n    return props.children;\r\n  } else {\r\n    return <>Something has happened</>;\r\n  }\r\n}\r\n\r\n// You likely intended to set default values instead of defaultValue\r\nAsyncWrapper.defaultProps = {\r\n  loading: true,\r\n  fulfilled: false,\r\n  error: null,\r\n  children: <></>,\r\n};\r\n\r\nexport default AsyncWrapper;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\nimport { ChartProps, HistoryTimestamp } from \"../app/react-ts-env\";\r\n\r\nfunction Chart(props: ChartProps) {\r\n  const { timestamp, price } = props.history.reduce(\r\n    (\r\n      prev: { timestamp: number[]; price: string[] },\r\n      current:HistoryTimestamp\r\n    ) => ({\r\n      timestamp: [...prev.timestamp, current.timestamp],\r\n      price: [...prev.price, current.price],\r\n    }),\r\n    { timestamp: [], price: [] }\r\n  );\r\n\r\n  const data = {\r\n    labels: timestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: price,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Line data={data} />;\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  useGetCoinDetailsQuery,\r\n  useGetCoinHistoryQuery,\r\n} from \"../redux/feature/coin.feature\";\r\nimport { useGetFeedsQuery } from \"../redux/feature/news.feature\";\r\nimport AsyncWrapper from \"../layouts/AsyncWrapper\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport millify from \"millify\";\r\nimport { coinState, genericStats, TIME_PERIOD } from \"../constant/crypto\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Chart from \"../components/chart\";\r\nimport NewsList from \"../components/NewsList\";\r\n\r\nconst CoinDetails = () => {\r\n  const params = useParams();\r\n  const [timePeriod, setTimePeriod] = useState<string>(\"24h\");\r\n  const { data, error, isLoading } = useGetCoinDetailsQuery({\r\n    coinId: params?.coinId,\r\n  });\r\n  const {\r\n    data: history,\r\n    error: errorHistory,\r\n    isLoading: isFetchingHistory,\r\n  } = useGetCoinHistoryQuery({ coinId: params?.coinId, timePeriod });\r\n  // const {\r\n  //   data: feeds,\r\n  //   error: feedserror,\r\n  //   isLoading: feedsLoading,\r\n  // } = useGetFeedsQuery({\r\n  //   query: \"Cryptocurrencies\",\r\n  //   count: 6,\r\n  // });\r\n\r\n  const handleTimePeriodChange = (\r\n    event: React.ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    setTimePeriod(event.target.value);\r\n  };\r\n  return (\r\n    <AsyncWrapper\r\n      loading={isLoading || isFetchingHistory}\r\n      error={error || errorHistory}\r\n      fulfilled={Boolean(data && history )}\r\n    >\r\n      {Boolean(data && history) && (\r\n        <div className=\"py-5 px-4\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <img\r\n              src={data.data.coin.iconUrl}\r\n              alt=\"data.data.coin.name\"\r\n              width={40}\r\n              height={50}\r\n            />\r\n            <p\r\n              style={{ color: data.data.coin.color, fontSize: \"3rem\" }}\r\n              className=\"mx-2 my-0\"\r\n            >\r\n              {data.data.coin.name}\r\n            </p>\r\n            <a\r\n              href={data.data.coin.websiteUrl}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <i className=\"bi bi-tag fs-4 text-dark\"></i>\r\n            </a>\r\n          </div>\r\n          <p className=\"my-4 text-dark opacity-75\">\r\n            {data.data.coin.description}\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div>\r\n                <h3 className=\"fw-normal\">\r\n                  {data.data.coin.name} Value Statistics\r\n                </h3>\r\n\r\n                <p className=\"mb-5 mt-3 text-dark opacity-75\">\r\n                  An overview showing the statistics of {data.data.coin.name},\r\n                  such as the base and quote currency, the rank, and trading\r\n                  volume.\r\n                </p>\r\n\r\n                {coinState(data.data.coin).map((st, index) => (\r\n                  <div\r\n                    className=\"d-flex justify-content-between fs-6 lh-lg\"\r\n                    key={index}\r\n                  >\r\n                    <div className=\"d-flex opacity-75\">\r\n                      <i className={st.icon}></i>\r\n                      <div className=\"mx-2\">{st.title}</div>\r\n                    </div>\r\n                    <div className=\"fw-semibold\">{st.value}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div>\r\n                <h3 className=\"fw-normal\">Other Stats Info</h3>\r\n                <p className=\"mb-5 mt-3 text-dark opacity-75\">\r\n                  An overview showing the statistics of {data.data.coin.name},\r\n                  such as the base and quote currency, the rank, and trading\r\n                  volume.\r\n                </p>\r\n                {genericStats(data.data.coin).map((st, index) => (\r\n                  <div\r\n                    className=\"d-flex justify-content-between fs-6 lh-lg\"\r\n                    key={index}\r\n                  >\r\n                    <div className=\"d-flex opacity-75\">\r\n                      <i className={st.icon} />\r\n                      <div className=\"mx-2\">{st.title}</div>\r\n                    </div>\r\n                    <div className=\"fw-semibold\">{st.value}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 fs-6\">\r\n            <h3 className=\"my-3 fw-normal\">{data.data.coin.name} Url's</h3>\r\n            {data.data.coin?.links.map((link: any, index: number) => (\r\n              <div className=\"d-flex justify-content-between lh-lg\" key={index}>\r\n                <div className=\"\">\r\n                  <div className=\"opacity-75\">{link.type}</div>\r\n                </div>\r\n                <a\r\n                  href={link.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  className=\"text-decoration-none CoinDetails_link\"\r\n                >\r\n                  {link.name}\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"my-5 d-flex justify-content-between lh-lg\">\r\n            <div>\r\n              <h1 className=\"fw-normal\">{data.data.coin.name} Price Chart</h1>\r\n              <div className=\"fw-semibold fs-5 d-flex justify-content-between\">\r\n                <div>Changes:</div>\r\n                <div>\r\n                  {parseFloat(history.data.change) > 0 ? (\r\n                    <div className=\"text-success\">+{history.data.change}%</div>\r\n                  ) : (\r\n                    <div className=\"text-danger\">{history.data.change}%</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex fw-semibold fs-5 justify-content-between\">\r\n                <div>Current {data.data.coin.name} Price:</div>\r\n                <div>{millify(parseFloat(data.data.coin.price))} $</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-25 mt-5\">\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                value={timePeriod}\r\n                onChange={handleTimePeriodChange}\r\n              >\r\n                {TIME_PERIOD.map((t,index) => (\r\n                  <option key={index}>{t}</option>\r\n                ))}\r\n              </Form.Select>\r\n            </div>\r\n          </div>\r\n          <Chart history={history.data.history} />\r\n\r\n          {/* <h3 className=\"fw-normal my-5\">Latest Crypto News</h3>\r\n          <div className=\"my-3\">\r\n            <NewsList feeds={feeds.value} />\r\n          </div> */}\r\n        </div>\r\n      )}\r\n    </AsyncWrapper>\r\n  );\r\n};\r\n\r\nexport default CoinDetails;\r\n"],"names":["TIME_PERIOD","genericStats","coin","title","value","numberOfMarkets","icon","numberOfExchanges","supply","confirmed","_jsx","className","concat","millify","parseFloat","total","max","coinState","price","rank","marketCap","allTimeHigh","stats","totalCoins","totalExchanges","totalMarketCap","totalMarkets","AsyncWrapper","props","loading","Spinner","error","fulfilled","children","_Fragment","defaultProps","_props$history$reduce","history","reduce","prev","current","timestamp","_toConsumableArray","data","labels","datasets","label","fill","backgroundColor","borderColor","Line","_data$data$coin","params","useParams","_useState","useState","_useState2","_slicedToArray","timePeriod","setTimePeriod","_useGetCoinDetailsQue","useGetCoinDetailsQuery","coinId","isLoading","_useGetCoinHistoryQue","useGetCoinHistoryQuery","errorHistory","isFetchingHistory","Boolean","_jsxs","src","iconUrl","alt","width","height","style","color","fontSize","name","href","websiteUrl","target","rel","description","map","st","index","links","link","type","url","change","Form","Select","onChange","event","t","Chart"],"sourceRoot":""}